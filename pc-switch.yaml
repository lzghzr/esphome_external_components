substitutions:
  device_friendly_name: "PC Switch"
  device_name: "pc-switch"
  io_led: 2
  io_power: 4
  io_reboot: 5
  io_status: 12

esphome:
  name: $device_name
  friendly_name: $device_friendly_name

esp8266:
  board: esp12e
  framework:
    version: recommended

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret pc_switch_key

ota:
  - platform: esphome
    password: !secret pc_switch_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret domain

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "PC Switch Hotspot"
    password: !secret hotspot_password
  # 省电模式
  power_save_mode: light

captive_portal:

output:
  # 电源
  - platform: gpio
    id: output_power
    pin: $io_power
  # 重启
  - platform: gpio
    id: output_reboot
    pin: $io_reboot
  # LED
  - platform: gpio
    id: output_led
    pin:
      number: $io_led
      inverted: true

binary_sensor:
  # 开机状态
  - platform: gpio
    id: binary_sensor_status
    pin: $io_status
    name: status
    icon: "mdi:power"
    device_class: power
    internal: true

switch:
  # 开关机
  - platform: template
    id: switch_power
    name: switch
    icon: "mdi:power"
    lambda: |-
      if (id(binary_sensor_status).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - button.press: button_power
    turn_off_action:
      - button.press: button_power
    restore_mode: DISABLED
  # LED
  - platform: output
    id: switch_led
    name: LED
    icon: "mdi:led-on"
    output: output_led

button:
  # 开机/关机
  - platform: output
    id: button_power
    name: power
    icon: "mdi:power"
    output: output_power
    duration: 500ms
  # 强制关机
  - platform: output
    id: button_shutdown
    name: shutdown
    icon: "mdi:power"
    output: output_power
    duration: 5000ms
  # 重启
  - platform: output
    id: button_reboot
    name: reboot
    icon: "mdi:power"
    output: output_reboot
    duration: 500ms
